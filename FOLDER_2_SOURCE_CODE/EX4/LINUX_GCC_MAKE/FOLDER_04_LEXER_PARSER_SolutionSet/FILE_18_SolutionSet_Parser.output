

Terminals which are not used:

   LPAREN
   RPAREN
   LBRACE
   RBRACE
   COMMA
   DIVIDE



Grammar
rule 1    program -> solutionSet
rule 2    solutionSet -> INT INT

Terminals, with rules where they appear

$ (-1)
error (256)
INT (258) 2
LPAREN (259)
RPAREN (260)
LBRACE (261)
RBRACE (262)
COMMA (263)
DIVIDE (264)

Nonterminals, with rules where they appear

program (10)
    on left: 1
solutionSet (11)
    on left: 2, on right: 1


state 0

    INT 	shift, and go to state 1

    program	go to state 4
    solutionSet	go to state 2



state 1

    solutionSet  ->  INT . INT   (rule 2)

    INT 	shift, and go to state 3



state 2

    program  ->  solutionSet .   (rule 1)

    $default	reduce using rule 1 (program)



state 3

    solutionSet  ->  INT INT .   (rule 2)

    $default	reduce using rule 2 (solutionSet)



state 4

    $   	go to state 5



state 5

    $   	go to state 6



state 6

    $default	accept
